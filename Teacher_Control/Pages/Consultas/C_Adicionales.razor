@page "/ConsultarAdicionales"
@inject IToastService toast

<div class="container shadow-lg p-3 rb-5 bg-white rounded col-md-16">

    <div class="card-img">
        <div class="card-header">
            <h1>Consultas de punto Adicionales</h1>
        </div>

        <div class="card-body">
            <form>
                <div class="form-row">
                    <div class="form-group">
                        <label>Filtrar por Fecha</label>
                        <select class="form-control" @bind="FiltroFecha">
                            <option value="0">Todo</option>
                            <option value="1">Fecha</option>
                        </select>
                    </div>
                    &nbsp;
                    <div class="form-group">
                        <label>Desde</label>
                        <input type="date" @bind="Desde" class="form-control" />
                    </div>
                    &nbsp;
                    <div class="form-group">
                        <label>Hasta</label>
                        <input type="date" @bind="Hasta" class="form-control" />
                    </div>

                    <div class="form-group ml-5">
                        <label>Filtro</label>
                        <select class="form-control" @bind="Filtro">
                            <option value="0">Todo</option>
                            <option value="1">Adicionales Id</option>
                            <option value="2">Estuidantes Id</option>
                            <option value="3">Descripcion</option>
                            <option value="4">Punto</option>
                           
                        </select>
                    </div>

                    <div class="form-group ml-1">
                        <label>Criterio</label>
                        <div class="input-group">
                            <input type="text" @bind="Criterio" class="form-control">
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary input-group-text" @onclick="@(u => Consultar())"><i class="oi oi-list-rich" /> Consultar</button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="table-responsive text-nowrap" style="position: relative; height:auto; overflow: auto; display: block;">
                    <table class="table table-striped">
                        <thead class="thead-light">
                            <tr>
                                <th>Adicionales Id</th>
                                <th>Estudiantes Id</th>
                                <th> Descripcion</th>
                                <th>Punto </th>


                            </tr>
                        </thead>
                        <tbody class="bg-white">
                            @foreach (var item in adicionalesList)
                            {
                            <tr>
                                <td>@item.AdicionalesId</td>
                                <td>@item.EstudianteId</td>
                                <td>@item.Descripcion</td>
                                <td>@item.Punto</td>

                            </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </form>
            <div>

            </div>
        </div>
    </div>

</div>


@code {

    [Inject]
    public AdicionalesBLL adicionalesBLL { get; set; }

    public List<Adicionales> adicionalesList { get; set; }

    private DateTime Desde { get; set; } = DateTime.Now;
    private DateTime Hasta { get; set; } = DateTime.Now;


    public string Filtro { get; set; }
    private string FiltroFecha { get; set; }

    public string Criterio { get; set; }

    protected override void OnInitialized()
    {
        Nuevo();
    }

    private void Nuevo()
    {
        adicionalesList = new List<Adicionales>();
        Filtro = "0";
        Criterio = string.Empty;
    }

    public async void Consultar()
    {
        int id;
        int.TryParse(Criterio, out id);
        //string.TryParse(Criterio, out observacion);
        switch (Filtro)
        {
            case "0": //Todo
                adicionalesList = await adicionalesBLL.Getlist(c => true);
                break;
            case "1":
                if (Criterio.Trim().Length > 0)
                {
                    adicionalesList = await adicionalesBLL.Getlist(c => c.AdicionalesId == id);
                }
                else
                {
                    toast.ShowWarning("Digite un Id");
                }
                break;
            case "2":
                if (Criterio.Trim().Length > 0)
                {

                }
                break;
        }
    }
}
